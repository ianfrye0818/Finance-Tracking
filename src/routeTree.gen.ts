/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RootLayoutRouteImport } from './routes/_rootLayout/route'
import { Route as IndexImport } from './routes/index'
import { Route as RootLayoutAuthRouteImport } from './routes/_rootLayout/_auth/route'
import { Route as RootLayoutTransactionsIndexImport } from './routes/_rootLayout/transactions/index'
import { Route as RootLayoutSettingsIndexImport } from './routes/_rootLayout/settings/index'
import { Route as RootLayoutReportsIndexImport } from './routes/_rootLayout/reports/index'
import { Route as RootLayoutImportIndexImport } from './routes/_rootLayout/import/index'
import { Route as RootLayoutDashboardIndexImport } from './routes/_rootLayout/dashboard/index'
import { Route as RootLayoutBudgetsIndexImport } from './routes/_rootLayout/budgets/index'
import { Route as RootLayoutAccountsIndexImport } from './routes/_rootLayout/accounts/index'
import { Route as RootLayoutAuthTermsIndexImport } from './routes/_rootLayout/_auth/terms/index'
import { Route as RootLayoutAuthSignupIndexImport } from './routes/_rootLayout/_auth/signup/index'
import { Route as RootLayoutAuthResetPasswordIndexImport } from './routes/_rootLayout/_auth/reset-password/index'
import { Route as RootLayoutAuthPrivacyIndexImport } from './routes/_rootLayout/_auth/privacy/index'
import { Route as RootLayoutAuthLoginIndexImport } from './routes/_rootLayout/_auth/login/index'
import { Route as RootLayoutAuthForgotPasswordIndexImport } from './routes/_rootLayout/_auth/forgot-password/index'

// Create/Update Routes

const RootLayoutRouteRoute = RootLayoutRouteImport.update({
  id: '/_rootLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RootLayoutAuthRouteRoute = RootLayoutAuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => RootLayoutRouteRoute,
} as any)

const RootLayoutTransactionsIndexRoute =
  RootLayoutTransactionsIndexImport.update({
    id: '/transactions/',
    path: '/transactions/',
    getParentRoute: () => RootLayoutRouteRoute,
  } as any)

const RootLayoutSettingsIndexRoute = RootLayoutSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => RootLayoutRouteRoute,
} as any)

const RootLayoutReportsIndexRoute = RootLayoutReportsIndexImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => RootLayoutRouteRoute,
} as any)

const RootLayoutImportIndexRoute = RootLayoutImportIndexImport.update({
  id: '/import/',
  path: '/import/',
  getParentRoute: () => RootLayoutRouteRoute,
} as any)

const RootLayoutDashboardIndexRoute = RootLayoutDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => RootLayoutRouteRoute,
} as any)

const RootLayoutBudgetsIndexRoute = RootLayoutBudgetsIndexImport.update({
  id: '/budgets/',
  path: '/budgets/',
  getParentRoute: () => RootLayoutRouteRoute,
} as any)

const RootLayoutAccountsIndexRoute = RootLayoutAccountsIndexImport.update({
  id: '/accounts/',
  path: '/accounts/',
  getParentRoute: () => RootLayoutRouteRoute,
} as any)

const RootLayoutAuthTermsIndexRoute = RootLayoutAuthTermsIndexImport.update({
  id: '/terms/',
  path: '/terms/',
  getParentRoute: () => RootLayoutAuthRouteRoute,
} as any)

const RootLayoutAuthSignupIndexRoute = RootLayoutAuthSignupIndexImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => RootLayoutAuthRouteRoute,
} as any)

const RootLayoutAuthResetPasswordIndexRoute =
  RootLayoutAuthResetPasswordIndexImport.update({
    id: '/reset-password/',
    path: '/reset-password/',
    getParentRoute: () => RootLayoutAuthRouteRoute,
  } as any)

const RootLayoutAuthPrivacyIndexRoute = RootLayoutAuthPrivacyIndexImport.update(
  {
    id: '/privacy/',
    path: '/privacy/',
    getParentRoute: () => RootLayoutAuthRouteRoute,
  } as any,
)

const RootLayoutAuthLoginIndexRoute = RootLayoutAuthLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => RootLayoutAuthRouteRoute,
} as any)

const RootLayoutAuthForgotPasswordIndexRoute =
  RootLayoutAuthForgotPasswordIndexImport.update({
    id: '/forgot-password/',
    path: '/forgot-password/',
    getParentRoute: () => RootLayoutAuthRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_rootLayout': {
      id: '/_rootLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RootLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/_rootLayout/_auth': {
      id: '/_rootLayout/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RootLayoutAuthRouteImport
      parentRoute: typeof RootLayoutRouteImport
    }
    '/_rootLayout/accounts/': {
      id: '/_rootLayout/accounts/'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof RootLayoutAccountsIndexImport
      parentRoute: typeof RootLayoutRouteImport
    }
    '/_rootLayout/budgets/': {
      id: '/_rootLayout/budgets/'
      path: '/budgets'
      fullPath: '/budgets'
      preLoaderRoute: typeof RootLayoutBudgetsIndexImport
      parentRoute: typeof RootLayoutRouteImport
    }
    '/_rootLayout/dashboard/': {
      id: '/_rootLayout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof RootLayoutDashboardIndexImport
      parentRoute: typeof RootLayoutRouteImport
    }
    '/_rootLayout/import/': {
      id: '/_rootLayout/import/'
      path: '/import'
      fullPath: '/import'
      preLoaderRoute: typeof RootLayoutImportIndexImport
      parentRoute: typeof RootLayoutRouteImport
    }
    '/_rootLayout/reports/': {
      id: '/_rootLayout/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof RootLayoutReportsIndexImport
      parentRoute: typeof RootLayoutRouteImport
    }
    '/_rootLayout/settings/': {
      id: '/_rootLayout/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof RootLayoutSettingsIndexImport
      parentRoute: typeof RootLayoutRouteImport
    }
    '/_rootLayout/transactions/': {
      id: '/_rootLayout/transactions/'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof RootLayoutTransactionsIndexImport
      parentRoute: typeof RootLayoutRouteImport
    }
    '/_rootLayout/_auth/forgot-password/': {
      id: '/_rootLayout/_auth/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof RootLayoutAuthForgotPasswordIndexImport
      parentRoute: typeof RootLayoutAuthRouteImport
    }
    '/_rootLayout/_auth/login/': {
      id: '/_rootLayout/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof RootLayoutAuthLoginIndexImport
      parentRoute: typeof RootLayoutAuthRouteImport
    }
    '/_rootLayout/_auth/privacy/': {
      id: '/_rootLayout/_auth/privacy/'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof RootLayoutAuthPrivacyIndexImport
      parentRoute: typeof RootLayoutAuthRouteImport
    }
    '/_rootLayout/_auth/reset-password/': {
      id: '/_rootLayout/_auth/reset-password/'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof RootLayoutAuthResetPasswordIndexImport
      parentRoute: typeof RootLayoutAuthRouteImport
    }
    '/_rootLayout/_auth/signup/': {
      id: '/_rootLayout/_auth/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof RootLayoutAuthSignupIndexImport
      parentRoute: typeof RootLayoutAuthRouteImport
    }
    '/_rootLayout/_auth/terms/': {
      id: '/_rootLayout/_auth/terms/'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof RootLayoutAuthTermsIndexImport
      parentRoute: typeof RootLayoutAuthRouteImport
    }
  }
}

// Create and export the route tree

interface RootLayoutAuthRouteRouteChildren {
  RootLayoutAuthForgotPasswordIndexRoute: typeof RootLayoutAuthForgotPasswordIndexRoute
  RootLayoutAuthLoginIndexRoute: typeof RootLayoutAuthLoginIndexRoute
  RootLayoutAuthPrivacyIndexRoute: typeof RootLayoutAuthPrivacyIndexRoute
  RootLayoutAuthResetPasswordIndexRoute: typeof RootLayoutAuthResetPasswordIndexRoute
  RootLayoutAuthSignupIndexRoute: typeof RootLayoutAuthSignupIndexRoute
  RootLayoutAuthTermsIndexRoute: typeof RootLayoutAuthTermsIndexRoute
}

const RootLayoutAuthRouteRouteChildren: RootLayoutAuthRouteRouteChildren = {
  RootLayoutAuthForgotPasswordIndexRoute:
    RootLayoutAuthForgotPasswordIndexRoute,
  RootLayoutAuthLoginIndexRoute: RootLayoutAuthLoginIndexRoute,
  RootLayoutAuthPrivacyIndexRoute: RootLayoutAuthPrivacyIndexRoute,
  RootLayoutAuthResetPasswordIndexRoute: RootLayoutAuthResetPasswordIndexRoute,
  RootLayoutAuthSignupIndexRoute: RootLayoutAuthSignupIndexRoute,
  RootLayoutAuthTermsIndexRoute: RootLayoutAuthTermsIndexRoute,
}

const RootLayoutAuthRouteRouteWithChildren =
  RootLayoutAuthRouteRoute._addFileChildren(RootLayoutAuthRouteRouteChildren)

interface RootLayoutRouteRouteChildren {
  RootLayoutAuthRouteRoute: typeof RootLayoutAuthRouteRouteWithChildren
  RootLayoutAccountsIndexRoute: typeof RootLayoutAccountsIndexRoute
  RootLayoutBudgetsIndexRoute: typeof RootLayoutBudgetsIndexRoute
  RootLayoutDashboardIndexRoute: typeof RootLayoutDashboardIndexRoute
  RootLayoutImportIndexRoute: typeof RootLayoutImportIndexRoute
  RootLayoutReportsIndexRoute: typeof RootLayoutReportsIndexRoute
  RootLayoutSettingsIndexRoute: typeof RootLayoutSettingsIndexRoute
  RootLayoutTransactionsIndexRoute: typeof RootLayoutTransactionsIndexRoute
}

const RootLayoutRouteRouteChildren: RootLayoutRouteRouteChildren = {
  RootLayoutAuthRouteRoute: RootLayoutAuthRouteRouteWithChildren,
  RootLayoutAccountsIndexRoute: RootLayoutAccountsIndexRoute,
  RootLayoutBudgetsIndexRoute: RootLayoutBudgetsIndexRoute,
  RootLayoutDashboardIndexRoute: RootLayoutDashboardIndexRoute,
  RootLayoutImportIndexRoute: RootLayoutImportIndexRoute,
  RootLayoutReportsIndexRoute: RootLayoutReportsIndexRoute,
  RootLayoutSettingsIndexRoute: RootLayoutSettingsIndexRoute,
  RootLayoutTransactionsIndexRoute: RootLayoutTransactionsIndexRoute,
}

const RootLayoutRouteRouteWithChildren = RootLayoutRouteRoute._addFileChildren(
  RootLayoutRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof RootLayoutAuthRouteRouteWithChildren
  '/accounts': typeof RootLayoutAccountsIndexRoute
  '/budgets': typeof RootLayoutBudgetsIndexRoute
  '/dashboard': typeof RootLayoutDashboardIndexRoute
  '/import': typeof RootLayoutImportIndexRoute
  '/reports': typeof RootLayoutReportsIndexRoute
  '/settings': typeof RootLayoutSettingsIndexRoute
  '/transactions': typeof RootLayoutTransactionsIndexRoute
  '/forgot-password': typeof RootLayoutAuthForgotPasswordIndexRoute
  '/login': typeof RootLayoutAuthLoginIndexRoute
  '/privacy': typeof RootLayoutAuthPrivacyIndexRoute
  '/reset-password': typeof RootLayoutAuthResetPasswordIndexRoute
  '/signup': typeof RootLayoutAuthSignupIndexRoute
  '/terms': typeof RootLayoutAuthTermsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof RootLayoutAuthRouteRouteWithChildren
  '/accounts': typeof RootLayoutAccountsIndexRoute
  '/budgets': typeof RootLayoutBudgetsIndexRoute
  '/dashboard': typeof RootLayoutDashboardIndexRoute
  '/import': typeof RootLayoutImportIndexRoute
  '/reports': typeof RootLayoutReportsIndexRoute
  '/settings': typeof RootLayoutSettingsIndexRoute
  '/transactions': typeof RootLayoutTransactionsIndexRoute
  '/forgot-password': typeof RootLayoutAuthForgotPasswordIndexRoute
  '/login': typeof RootLayoutAuthLoginIndexRoute
  '/privacy': typeof RootLayoutAuthPrivacyIndexRoute
  '/reset-password': typeof RootLayoutAuthResetPasswordIndexRoute
  '/signup': typeof RootLayoutAuthSignupIndexRoute
  '/terms': typeof RootLayoutAuthTermsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_rootLayout': typeof RootLayoutRouteRouteWithChildren
  '/_rootLayout/_auth': typeof RootLayoutAuthRouteRouteWithChildren
  '/_rootLayout/accounts/': typeof RootLayoutAccountsIndexRoute
  '/_rootLayout/budgets/': typeof RootLayoutBudgetsIndexRoute
  '/_rootLayout/dashboard/': typeof RootLayoutDashboardIndexRoute
  '/_rootLayout/import/': typeof RootLayoutImportIndexRoute
  '/_rootLayout/reports/': typeof RootLayoutReportsIndexRoute
  '/_rootLayout/settings/': typeof RootLayoutSettingsIndexRoute
  '/_rootLayout/transactions/': typeof RootLayoutTransactionsIndexRoute
  '/_rootLayout/_auth/forgot-password/': typeof RootLayoutAuthForgotPasswordIndexRoute
  '/_rootLayout/_auth/login/': typeof RootLayoutAuthLoginIndexRoute
  '/_rootLayout/_auth/privacy/': typeof RootLayoutAuthPrivacyIndexRoute
  '/_rootLayout/_auth/reset-password/': typeof RootLayoutAuthResetPasswordIndexRoute
  '/_rootLayout/_auth/signup/': typeof RootLayoutAuthSignupIndexRoute
  '/_rootLayout/_auth/terms/': typeof RootLayoutAuthTermsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/accounts'
    | '/budgets'
    | '/dashboard'
    | '/import'
    | '/reports'
    | '/settings'
    | '/transactions'
    | '/forgot-password'
    | '/login'
    | '/privacy'
    | '/reset-password'
    | '/signup'
    | '/terms'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/accounts'
    | '/budgets'
    | '/dashboard'
    | '/import'
    | '/reports'
    | '/settings'
    | '/transactions'
    | '/forgot-password'
    | '/login'
    | '/privacy'
    | '/reset-password'
    | '/signup'
    | '/terms'
  id:
    | '__root__'
    | '/'
    | '/_rootLayout'
    | '/_rootLayout/_auth'
    | '/_rootLayout/accounts/'
    | '/_rootLayout/budgets/'
    | '/_rootLayout/dashboard/'
    | '/_rootLayout/import/'
    | '/_rootLayout/reports/'
    | '/_rootLayout/settings/'
    | '/_rootLayout/transactions/'
    | '/_rootLayout/_auth/forgot-password/'
    | '/_rootLayout/_auth/login/'
    | '/_rootLayout/_auth/privacy/'
    | '/_rootLayout/_auth/reset-password/'
    | '/_rootLayout/_auth/signup/'
    | '/_rootLayout/_auth/terms/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RootLayoutRouteRoute: typeof RootLayoutRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RootLayoutRouteRoute: RootLayoutRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_rootLayout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_rootLayout": {
      "filePath": "_rootLayout/route.tsx",
      "children": [
        "/_rootLayout/_auth",
        "/_rootLayout/accounts/",
        "/_rootLayout/budgets/",
        "/_rootLayout/dashboard/",
        "/_rootLayout/import/",
        "/_rootLayout/reports/",
        "/_rootLayout/settings/",
        "/_rootLayout/transactions/"
      ]
    },
    "/_rootLayout/_auth": {
      "filePath": "_rootLayout/_auth/route.tsx",
      "parent": "/_rootLayout",
      "children": [
        "/_rootLayout/_auth/forgot-password/",
        "/_rootLayout/_auth/login/",
        "/_rootLayout/_auth/privacy/",
        "/_rootLayout/_auth/reset-password/",
        "/_rootLayout/_auth/signup/",
        "/_rootLayout/_auth/terms/"
      ]
    },
    "/_rootLayout/accounts/": {
      "filePath": "_rootLayout/accounts/index.tsx",
      "parent": "/_rootLayout"
    },
    "/_rootLayout/budgets/": {
      "filePath": "_rootLayout/budgets/index.tsx",
      "parent": "/_rootLayout"
    },
    "/_rootLayout/dashboard/": {
      "filePath": "_rootLayout/dashboard/index.tsx",
      "parent": "/_rootLayout"
    },
    "/_rootLayout/import/": {
      "filePath": "_rootLayout/import/index.tsx",
      "parent": "/_rootLayout"
    },
    "/_rootLayout/reports/": {
      "filePath": "_rootLayout/reports/index.tsx",
      "parent": "/_rootLayout"
    },
    "/_rootLayout/settings/": {
      "filePath": "_rootLayout/settings/index.tsx",
      "parent": "/_rootLayout"
    },
    "/_rootLayout/transactions/": {
      "filePath": "_rootLayout/transactions/index.tsx",
      "parent": "/_rootLayout"
    },
    "/_rootLayout/_auth/forgot-password/": {
      "filePath": "_rootLayout/_auth/forgot-password/index.tsx",
      "parent": "/_rootLayout/_auth"
    },
    "/_rootLayout/_auth/login/": {
      "filePath": "_rootLayout/_auth/login/index.tsx",
      "parent": "/_rootLayout/_auth"
    },
    "/_rootLayout/_auth/privacy/": {
      "filePath": "_rootLayout/_auth/privacy/index.tsx",
      "parent": "/_rootLayout/_auth"
    },
    "/_rootLayout/_auth/reset-password/": {
      "filePath": "_rootLayout/_auth/reset-password/index.tsx",
      "parent": "/_rootLayout/_auth"
    },
    "/_rootLayout/_auth/signup/": {
      "filePath": "_rootLayout/_auth/signup/index.tsx",
      "parent": "/_rootLayout/_auth"
    },
    "/_rootLayout/_auth/terms/": {
      "filePath": "_rootLayout/_auth/terms/index.tsx",
      "parent": "/_rootLayout/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
